{"version":3,"sources":["components/NewServer.js","backends/RecordApi.js","components/RecordList.js","backends/ServerApi.js","components/ServerInstanceList.js","App.js","index.js"],"names":["NewServer","props","useState","showDialog","setShowDialog","name","setName","host","setHost","style","textAlign","Dialog","open","onClose","DialogTitle","id","DialogContent","DialogContentText","height","TextField","width","label","variant","onChange","e","target","value","DialogActions","Button","onClick","onSubmit","records","RecordList","server","undefined","map","record","servers","getServers","ServerInstanceList","React","expanded","setExpanded","margin","Accordion","panel","event","isExpanded","AccordionSummary","expandIcon","sx","flexShrink","AccordionDetails","color","index","deleteServer","onServerChange","App","setServers","push","addServer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.16e9b156.chunk.js","sourcesContent":["import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle, TextField,\r\n} from \"@material-ui/core\";\r\nimport {useState} from \"react\";\r\n\r\nfunction NewServer(props) {\r\n  const [showDialog, setShowDialog] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  const [host, setHost] = useState(\"\");\r\n\r\n  const onAddServer = () => {\r\n    setShowDialog(true);\r\n  }\r\n\r\n  return <div style={{textAlign: \"center\"}}>\r\n    <Dialog open={showDialog} onClose={() => setShowDialog(false)}>\r\n      <DialogTitle id=\"form-dialog-title\">Add a server</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>\r\n          Please provide some info of the server you want to monitor.\r\n          Server you add will update automatically every hour.\r\n        </DialogContentText>\r\n        <div style={{height: 20}} />\r\n        <TextField\r\n          style={{width: \"100%\"}}\r\n          label=\"Server Name\"\r\n          variant=\"outlined\"\r\n          onChange={e => setName(e.target.value)}\r\n        />\r\n        <div style={{height: 10}}/>\r\n        <TextField\r\n          style={{width: \"100%\"}}\r\n          label=\"Server Host\"\r\n          variant=\"outlined\"\r\n          onChange={e => setHost(e.target.value)}\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={() => setShowDialog(false)}>\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={() => {\r\n          setShowDialog(false);\r\n          props.onSubmit({\r\n            name: name,\r\n            host: host,\r\n          });\r\n        }}>\r\n          Add\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n    <Button variant=\"outlined\" onClick={onAddServer}>\r\n      New Server\r\n    </Button>\r\n  </div>;\r\n}\r\n\r\nexport default NewServer;\r\n","let records = {\r\n  \"kininaru server\": [41, 35, 20, 59, 50, 29],\r\n  \"baidu server\": [10, 12, 18, 26, 37, 19],\r\n  \"Google server\": [300, 279, 378, 601, 459, 390]\r\n}\r\n\r\nexport function getRecords(id) {\r\n  return records[id];\r\n}\r\n","import {getRecords} from \"../backends/RecordApi\";\r\n\r\nfunction RecordList(server) {\r\n  let records = getRecords(server.name);\r\n  if (records === undefined || records === null) return null;\r\n  return <div style={{width: \"100%\"}}>\r\n    {records.map(record => <div>{record}</div>)}\r\n  </div>;\r\n}\r\n\r\nexport default RecordList;\r\n","let servers = [{\r\n  name: \"kininaru server\",\r\n  host: \"kininaru.dev\"\r\n}, {\r\n  name: \"baidu server\",\r\n  host: \"baidu.com\"\r\n}, {\r\n  name: \"Google server\",\r\n  host: \"google.com\"\r\n}]\r\n\r\nexport function addServer(server) {\r\n  servers.push(server);\r\n}\r\n\r\nexport function getServers() {\r\n  return servers;\r\n}\r\n\r\nexport function deleteServer(server) {\r\n  for (const index in servers) {\r\n    if (servers[index].name === server.name) {\r\n      delete servers[index];\r\n      return;\r\n    }\r\n  }\r\n}\r\n","// import ServerInstance from \"./ServerInstance\";\r\n// import * as React from \"react\";\r\n//\r\n// function ServerInstanceList(servers) {\r\n//   if (servers === null) return null;\r\n//   return <div className=\"mdui-panel\" mdui-panel>\r\n//     { servers.map(server => ServerInstance(server)) }\r\n//     </div>;\r\n// }\r\n\r\nimport * as React from 'react';\r\nimport Accordion from '@mui/material/Accordion';\r\nimport AccordionDetails from '@mui/material/AccordionDetails';\r\nimport AccordionSummary from '@mui/material/AccordionSummary';\r\nimport RecordList from \"./RecordList\";\r\nimport {deleteServer} from \"../backends/ServerApi\";\r\n\r\nfunction ServerInstanceList(props) {\r\n  const [expanded, setExpanded] = React.useState(false);\r\n\r\n  const handleChange = (panel) => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false);\r\n  };\r\n\r\n  return (\r\n    <div style={{margin: 100}}>\r\n      {props.servers.map(server =>\r\n        <Accordion style={{width: \"100%\"}} expanded={expanded === server.name} onChange={handleChange(server.name)}>\r\n          <AccordionSummary\r\n            expandIcon={<div>↓</div>}\r\n            aria-controls=\"panel1bh-content\"\r\n            id=\"panel1bh-header\"\r\n          >\r\n            <div sx={{ width: '33%', flexShrink: 0 }}>\r\n              {server.name}\r\n            </div>\r\n          </AccordionSummary>\r\n          <AccordionDetails style={{width: \"100%\"}}>\r\n            {RecordList(server)}\r\n            <div\r\n              style={{width: \"95%\", textAlign: \"right\", color: \"red\"}}\r\n              onClick={() => {\r\n                deleteServer(server);\r\n                props.onServerChange()\r\n              }}\r\n            >\r\n              删除\r\n            </div>\r\n          </AccordionDetails>\r\n        </Accordion>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default ServerInstanceList;\r\n","import './App.css';\r\nimport {useState} from \"react\";\r\nimport NewServer from \"./components/NewServer\";\r\nimport ServerInstanceList from \"./components/ServerInstanceList\";\r\nimport {addServer, getServers} from \"./backends/ServerApi\";\r\n\r\nfunction App() {\r\n  const [servers, setServers] = useState(getServers());\r\n\r\n  return (\r\n    <div style={{textAlign: \"center\"}}>\r\n      <ServerInstanceList\r\n        onServerChange={() => {\r\n          setServers(getServers());\r\n        }}\r\n        servers={servers}\r\n      />\r\n      <NewServer\r\n        onSubmit={server => {\r\n          addServer(server);\r\n          setServers(getServers());\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}